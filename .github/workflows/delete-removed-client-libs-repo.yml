name: Delete Removed Client Libs Repo

on:
  push:
    branches:
      - main

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      repo_prefix: ${{ steps.repo_prefix.outputs.prefix }}
    steps:
      - uses: actions/checkout@main

      - name: Determine Repo Prefix
        id: repo_prefix
        run: echo "prefix=$(echo "$GITHUB_REPOSITORY" | sed 's/.*\///' | sed 's/-Docs\|-Declaration\|-Documentation//')" >> $GITHUB_OUTPUT


  delete-repos-for-deleted-specs:
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Previous Commit for Comparison
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Delete Repos for Deleted Specs
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          chmod +x scripts/delete-repo.sh
          git diff --name-status ${{ github.event.before }} ${{ github.sha }} | grep '^D' | cut -f2 > deleted_files.txt
          deleted_files=$(cat deleted_files.txt)
          repo_prefix="${{ needs.setup-environment.outputs.repo_prefix }}"
          for file in $deleted_files; do
            if [[ "$file" =~ \.(swagger\.json)$ ]]; then
              filename=$(basename "${file%.*}")
              repo_name="${repo_prefix}-${filename}-http-library" # Adjust based on actual naming convention
              echo "Deleting repository for deleted spec: $repo_name"
              ./scripts/delete-repo.sh "$repo_name"
            fi
            if [[ "$file" =~ \.(proto)$ ]]; then
              filename=$(basename "${file%.*}")
              repo_name="${repo_prefix}-${filename}-grpc-library" # Adjust based on actual naming convention
              echo "Deleting repository for deleted spec: $repo_name"
              ./scripts/delete-repo.sh "$repo_name"
            fi
          done
        
