name: Generate and Deploy Client Libraries

on:
  push:
    branches:
      - main

jobs:
  generate-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Find API Specifications
        id: find_specs
        run: |
          echo "::set-output name=spec_paths::$(find openapi -type f \( -iname "*.yaml" -o -iname "*.json" \) | xargs)"
        shell: bash

      - name: Generate Clients
        run: |
          spec_paths=${{ steps.find_specs.outputs.spec_paths }}
          for spec in $spec_paths; do
            filename=$(basename "$spec")
            repo_name="${filename%.*}" # Удаляем расширение файла
            repo_name="${repo_name%.swagger}" # Удаляем '.swagger'
            output_dir="generated-clients/$repo_name"
            mkdir -p "$output_dir"
            echo "Generating client for $spec"
            wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/5.3.0/openapi-generator-cli-5.3.0.jar -O openapi-generator-cli.jar
            java -jar openapi-generator-cli.jar generate -i "$spec" -g javascript -o "$output_dir"
          done

      - name: Create Repositories If Not Exists
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          spec_paths=${{ steps.find_specs.outputs.spec_paths }}
          for spec in $spec_paths; do
            filename=$(basename "$spec")
            repo_name="${filename%.*}"
            repo_name="${repo_name%.swagger}"
            echo "Checking if $repo_name repository exists..."
            if curl --silent --output /dev/null --head --fail "https://github.com/BobrePatre/$repo_name"; then
              echo "Repository $repo_name already exists."
            else
              echo "Creating repository $repo_name..."
              curl -u "BobrePatre:$GH_PAT" https://api.github.com/user/repos -d '{"name":"'$repo_name'"}'
            fi
          done

      - name: Commit and Push Clients
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          spec_paths=${{ steps.find_specs.outputs.spec_paths }}
          commit_message=$(git log -1 --pretty=%B)
          for spec in $spec_paths; do
            filename=$(basename "$spec")
            repo_name="${filename%.*}"
            repo_name="${repo_name%.swagger}"
            output_dir="generated-clients/$repo_name"
            cd "$output_dir"
            git init
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add .
            git commit -m "$commit_message"
            git branch -M main
            git remote add origin https://BobrePatre:$GH_PAT@github.com/BobrePatre/$repo_name.git
            git push -u origin main -f
            cd ../../..
          done
